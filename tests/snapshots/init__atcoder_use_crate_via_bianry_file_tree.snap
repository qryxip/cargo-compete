---
source: tests/init.rs
expression: tree
---
{
  ".cargo": {
    "config.toml": "[build]\ntarget-dir = \"target\"\n"
  },
  "compete.toml": "# Path to the test file (Liquid template)\n#\n# Variables:\n#\n# - `manifest_dir`: Package directory\n# - `contest`:      Contest ID (e.g. \"abc100\")\n# - `bin_name`:     Name of a `bin` target (e.g. \"abc100-a\")\n# - `bin_alias`:    \"Alias\" for a `bin` target defined in `pacakge.metadata.cargo-compete` (e.g. \"a\")\n# - `problem`:      Alias for `bin_alias` (deprecated)\n#\n# Additional filters:\n#\n# - `kebabcase`: Convert to kebab case (by using the `heck` crate)\ntest-suite = \"{{ manifest_dir }}/testcases/{{ bin_alias }}.yml\"\n\n# Open files with the command (`jq` command that outputs `string[] | string[][]`)\n#\n# VSCode:\n#open = '[[\"code\", \"-a\", .manifest_dir], [\"code\"] + (.paths | map([.src, .test_suite]) | flatten)]'\n# Emacs:\n#open = '[\"emacsclient\", \"-n\"] + (.paths | map([.src, .test_suite]) | flatten)'\n\n[template]\nsrc = '''\nfn main() {\n    todo!();\n}\n'''\n\n[template.new]\n# `edition` for `Cargo.toml`.\nedition = \"2021\"\n# `profile` for `Cargo.toml`.\n#\n# By setting this, you can run tests with `opt-level=3` while enabling `debug-assertions` and `overflow-checks`.\n#profile = '''\n#[dev]\n#opt-level = 3\n#'''\ndependencies = '''\n#proconio = { version = \"=0.3.6\", features = [\"derive\"] }\n'''\ndev-dependencies = '''\n#atcoder-202004-lock = { git = \"https://github.com/qryxip/atcoder-202004-lock\" }\n'''\n\n[template.new.copy-files]\n\n[new]\nkind = \"cargo-compete\"\n# Platform\n#\n# - atcoder\n# - codeforces\n# - yukicoder\nplatform = \"atcoder\"\n# Path (Liquid template)\n#\n# Variables:\n#\n# - `contest`:      Contest ID. **May be nil**\n# - `package_name`: Package name\npath = \"./{{ contest }}\"\n\n#[new]\n#kind = \"oj-api\"\n#url = \"https://atcoder.jp/contests/{{ id }}\"\n#path = \"./{{ contest }}\"\n\n# for Library-Checker\n#[add]\n#url = \"https://judge.yosupo.jp/problem/{{ args[0] }}\"\n##is-contest = [\"false\"] # optional\n##target-kind = \"bin\" # [\"bin\", \"example\"]. default to \"bin\"\n#bin-name = '{{ args[0] }}'\n##bin-alias = '{{ args[0] }}' # optional\n##bin-src-path = './src/bin/{{ bin_alias }}.rs' # optional\n\n# for yukicoder\n#[add]\n#url = '{% case args[0] %}{% when \"contest\" %}https://yukicoder.me/contests/{{ args[1] }}{% when \"problem\" %}https://yukicoder.me/problems/no/{{ args[1] }}{% endcase %}'\n#is-contest = [\"bash\", \"-c\", '[[ $(cut -d / -f 4) == \"contests\" ]]'] # optional\n##target-kind = \"bin\" # [\"bin\", \"example\"]. default to \"bin\"\n#bin-name = '{% assign segments = url | split: \"/\" %}{{ segments[5] }}'\n##bin-alias = '{% assign segments = url | split: \"/\" %}{{ segments[5] }}' # optional\n##bin-src-path = './src/bin/{{ bin_alias }}.rs' # optional\n\n[test]\n# Toolchain for the test. (optional)\ntoolchain = \"1.70.0\"\n# Profile for `cargo build`. (\"dev\" | \"release\")\n#\n# Defaults to `\"dev\"`.\n#profile = \"dev\"\n\n[submit]\nkind = \"command\"\nargs = [\"cargo\", \"executable-payload\", \"--bin\", \"{{ bin_name }}\"]\nlanguage_id = \"5054\""
}
